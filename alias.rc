#!/bin/env
alias docker-listall='docker ps -a -q'
alias docker-stopall='for i in $( docker ps -a -q ); do docker stop $i & done'
function codegrep() {
    grep --color=never -rn "$@" 2>&1 | grep -ve "full\.repos/" -e "patches/" \
        -e "README.md" -e "\.git/" -e "Makefile" -e "\.unmerged:" | \
            grep --color=never -e "\.c:" -e "\.h:" | grep --color=always "$@";
}
function uvk5chpk() {
    if [ ${GITSHLVL:-0} -eq 0 ]; then
        echo "ERROR: this fuctions works within gitshell only, abort."
        return 1
    fi
    if ! ch | tail -n1 | grep -q "nothing to commit"; then
        echo "WARNING: changes are pending, stash before chpk, abort."
        return 1
    fi
    pfile=$(fpatch --ignore-space-change $1)
    sed -i "s,gEeprom\.,gpEeprom->,g" $pfile
    if patch -NElp1 --dry-run < $pfile; then
        echo "patch apply, trying git patch apply"
        pa $pfile && lg1
        return 0
    fi
    echo -e "\n>>> Manual patching ...\n"
    patch -NElp1 < $pfile
    hres compile-with-docker*.sh README.md | grep -ve .
    if ! ch | tail -n1 | grep -qe "^nothing"; then
        cm -am "${2:+$2, }chpk $1 preparation" && lg1
    fi
    chpk $1 -m 1 --ignore-space-change --rerere-autoupdate --ff 
    if ! ch | tail -n1 | grep -qe "^nothing"; then
        echo -e "\n>>> Selective reset ...\n"
        hres compile-with-docker*.sh README.md
        ch
    fi
}
