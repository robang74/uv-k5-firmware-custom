From 221f468ecdcce87d7d9f766bf642beaf0a4cfdd8 Mon Sep 17 00:00:00 2001
From: "Roberto A. Foglietta" <roberto.foglietta@gmail.com>
Date: Tue, 22 Oct 2024 16:38:50 +0200
Subject: [PATCH] bool packaging

Signed-off-by: Roberto A. Foglietta <roberto.foglietta@gmail.com>
---
 app/action.c       |  4 +--
 app/app.c          | 24 ++++++++--------
 app/menu.c         | 48 +++++++++++++++----------------
 driver/backlight.c |  2 +-
 driver/st7565.c    |  4 +--
 main.c             |  4 ++-
 misc.c             | 23 ++++-----------
 misc.h             | 55 +++++++++++++++++++++++++-----------
 radio.c            |  6 ++--
 settings.c         | 70 +++++++++++++++++++++++-----------------------
 ui/main.c          | 14 +++++-----
 ui/menu.c          |  2 +-
 ui/status.c        |  4 +--
 13 files changed, 137 insertions(+), 123 deletions(-)

diff --git a/app/action.c b/app/action.c
index 3e063fb..70797e0 100644
--- a/app/action.c
+++ b/app/action.c
@@ -471,14 +471,14 @@ void ACTION_BlminTmpOff(void)
 
 void ACTION_Update(void)
 {
-    gSaveRxMode          = false;
+    g->SaveRxMode          = false;
     gFlagReconfigureVfos = true;
     gUpdateStatus        = true;
 }
 
 void ACTION_Ptt(void)
 {
-    gSetting_set_ptt_session = (gSetting_set_ptt_session == 0) ? 1: 0;
+    g->Setting_set_ptt_session = (g->Setting_set_ptt_session == 0) ? 1: 0;
 }
 
 void ACTION_Wn(void)
diff --git a/app/app.c b/app/app.c
index b3c24c5..7e46b94 100644
--- a/app/app.c
+++ b/app/app.c
@@ -895,7 +895,7 @@ void APP_Update(void)
 #ifdef ENABLE_FEAT_F4HWN
     if (gCurrentFunction == FUNCTION_TRANSMIT && (gTxTimeoutReachedAlert || SerialConfigInProgress()))
     {
-        if(gSetting_set_tot >= 2)
+        if(g->Setting_set_tot >= 2)
         {
             if (gEeprom.BACKLIGHT_TIME == 0) {
                 if (gBlinkCounter == 0 || gBlinkCounter == 250)
@@ -921,14 +921,14 @@ void APP_Update(void)
         gBlinkCounter++;
 
         if(
-            (gSetting_set_tot == 3 && gEeprom.BACKLIGHT_TIME != 0 && gBlinkCounter > 74000) || 
-            (gSetting_set_tot == 3 && gEeprom.BACKLIGHT_TIME == 0 && gBlinkCounter > 79000) || 
-            (gSetting_set_tot != 3 && gBlinkCounter > 76000)
+            (g->Setting_set_tot == 3 && gEeprom.BACKLIGHT_TIME != 0 && gBlinkCounter > 74000) || 
+            (g->Setting_set_tot == 3 && gEeprom.BACKLIGHT_TIME == 0 && gBlinkCounter > 79000) || 
+            (g->Setting_set_tot != 3 && gBlinkCounter > 76000)
             ) // try to calibrate 10 times
         {
             gBlinkCounter = 0;
 
-            if(gSetting_set_tot == 1 || gSetting_set_tot == 3)
+            if(g->Setting_set_tot == 1 || g->Setting_set_tot == 3)
             {
                 BK4819_DisableScramble();
                 BK4819_PlaySingleTone(gTxTimeoutToneAlert, 30, 1, true);
@@ -952,7 +952,7 @@ void APP_Update(void)
         gTxTimeoutReachedAlert = false;
         gTxTimeoutToneAlert = 800;
 
-        if (gSetting_set_ptt_session) // Improve OnePush if TOT
+        if (g->Setting_set_ptt_session) // Improve OnePush if TOT
         {
             if(gPttOnePushCounter == 1)
             {
@@ -970,7 +970,7 @@ void APP_Update(void)
             ST7565_ContrastAndInv();
         }
         /*
-        if (gSetting_set_ptt_session) // Improve OnePush if TOT
+        if (g->Setting_set_ptt_session) // Improve OnePush if TOT
         {
             ProcessKey(KEY_PTT, false, false);
             gPttIsPressed = false;
@@ -1173,7 +1173,7 @@ static void CheckKeys(void)
 
 // -------------------- PTT ------------------------
 #ifdef ENABLE_FEAT_F4HWN
-    if (gSetting_set_ptt_session)
+    if (g->Setting_set_ptt_session)
     {
         if (!GPIO_CheckBit(&GPIOC->DATA, GPIOC_PIN_PTT) && !SerialConfigInProgress() && gPttOnePushCounter == 0)
         {   // PTT pressed
@@ -1600,7 +1600,7 @@ void APP_TimeSlice500ms(void)
         original F4HWN was using 120x which is similar to (1<<7) = 128x (faster)
         moreover, first checking the boolean (quick) then the other stuff (slow)
     */
-    if (bitchk(BF_DS_WAKE_UP) && gSleepModeCountdown_500ms == (gSetting_set_off << 7)) {
+    if (bitchk(BF_DS_WAKE_UP) && gSleepModeCountdown_500ms == ((uint16_t)g->Setting_set_off << 7)) {
         //ST7565_Init();
         ST7565_FixInterfGlitch();
         BK4819_ToggleGpioOut(BK4819_GPIO5_PIN1_RED, false);
@@ -1618,7 +1618,7 @@ void APP_TimeSlice500ms(void)
         if(gSleepModeCountdown_500ms) {
             --gSleepModeCountdown_500ms;
 
-            if(gSetting_set_off && gSleepModeCountdown_500ms < 61)
+            if(g->Setting_set_off && gSleepModeCountdown_500ms < 61)
             {
                 PWM_PLUS0_CH0_COMP = (gSleepModeCountdown_500ms & 3) ? 0 : \
                     value[gEeprom.BACKLIGHT_MAX] << 2; // Max brightness
@@ -1635,7 +1635,7 @@ void APP_TimeSlice500ms(void)
     else
     {
         //RAF: original F4HWN was using 120x but (1<<7) = 128x is faster
-        gSleepModeCountdown_500ms = (uint16_t)gSetting_set_off << 7;
+        gSleepModeCountdown_500ms = (uint16_t)g->Setting_set_off << 7;
     }
 
     if (bitchk(BF_DS_WAKE_UP)) {
@@ -1921,7 +1921,7 @@ static void ProcessKey(KEY_Code_t Key, bool bKeyPressed, bool bKeyHeld)
 #ifdef ENABLE_FEAT_F4HWN // Disable PTT if KEY_LOCK
     bool lck_condition = false;
 
-    if(gSetting_set_lck)
+    if(g->Setting_set_lck)
         lck_condition = (gEeprom.KEY_LOCK || lowBatPopup) && gCurrentFunction != FUNCTION_TRANSMIT;
     else
         lck_condition = (gEeprom.KEY_LOCK || lowBatPopup) && gCurrentFunction != FUNCTION_TRANSMIT && Key != KEY_PTT;
diff --git a/app/menu.c b/app/menu.c
index 22fd18d..780d008 100644
--- a/app/menu.c
+++ b/app/menu.c
@@ -605,7 +605,7 @@ void MENU_AcceptSetting(void)
             #ifdef ENABLE_FEAT_F4HWN
                 gDW = gEeprom.DUAL_WATCH;
                 gCB = gEeprom.CROSS_BAND_RX_TX;
-                gSaveRxMode = true;
+                g->SaveRxMode = true;
             #endif
 
             gFlagReconfigureVfos = true;
@@ -883,42 +883,42 @@ void MENU_AcceptSetting(void)
 
 #ifdef ENABLE_FEAT_F4HWN_SLEEP 
         case MENU_SET_OFF:
-            gSetting_set_off = gSubMenuSelection;
+            g->Setting_set_off = gSubMenuSelection;
             break;
 #endif
 
 #ifdef ENABLE_FEAT_F4HWN
         case MENU_SET_PWR:
-            gSetting_set_pwr = gSubMenuSelection;
+            g->Setting_set_pwr = gSubMenuSelection;
             gRequestSaveChannel = 1;
             break;
         case MENU_SET_PTT:
-            gSetting_set_ptt = gSubMenuSelection;
-            gSetting_set_ptt_session = gSetting_set_ptt; // Special for action
+            g->Setting_set_ptt = gSubMenuSelection;
+            g->Setting_set_ptt_session = g->Setting_set_ptt; // Special for action
             break;
         case MENU_SET_TOT:
-            gSetting_set_tot = gSubMenuSelection;
+            g->Setting_set_tot = gSubMenuSelection;
             break;
         case MENU_SET_EOT:
-            gSetting_set_eot = gSubMenuSelection;
+            g->Setting_set_eot = gSubMenuSelection;
             break;
         case MENU_SET_CTR:
-            gSetting_set_ctr = gSubMenuSelection;
+            g->Setting_set_ctr = gSubMenuSelection;
             break;
         case MENU_SET_INV:
-            gSetting_set_inv = gSubMenuSelection;
+            g->Setting_set_inv = gSubMenuSelection;
             break;
         case MENU_SET_LCK:
-            gSetting_set_lck = gSubMenuSelection;
+            g->Setting_set_lck = gSubMenuSelection;
             break;
         case MENU_SET_MET:
-            gSetting_set_met = gSubMenuSelection;
+            g->Setting_set_met = gSubMenuSelection;
             break;
         case MENU_SET_GUI:
-            gSetting_set_gui = gSubMenuSelection;
+            g->Setting_set_gui = gSubMenuSelection;
             break;
         case MENU_SET_TMR:
-            gSetting_set_tmr = gSubMenuSelection;
+            g->Setting_set_tmr = gSubMenuSelection;
             break;
         case MENU_TX_LOCK:
             gTxVfo->TX_LOCK = gSubMenuSelection;
@@ -1319,40 +1319,40 @@ void MENU_ShowCurrentSetting(void)
 
 #ifdef ENABLE_FEAT_F4HWN_SLEEP 
         case MENU_SET_OFF:
-            gSubMenuSelection = gSetting_set_off;
+            gSubMenuSelection = g->Setting_set_off;
             break;
 #endif
 
 #ifdef ENABLE_FEAT_F4HWN
         case MENU_SET_PWR:
-            gSubMenuSelection = gSetting_set_pwr;
+            gSubMenuSelection = g->Setting_set_pwr;
             break;
         case MENU_SET_PTT:
-            gSubMenuSelection = gSetting_set_ptt_session;
+            gSubMenuSelection = g->Setting_set_ptt_session;
             break;
         case MENU_SET_TOT:
-            gSubMenuSelection = gSetting_set_tot;
+            gSubMenuSelection = g->Setting_set_tot;
             break;
         case MENU_SET_EOT:
-            gSubMenuSelection = gSetting_set_eot;
+            gSubMenuSelection = g->Setting_set_eot;
             break;
         case MENU_SET_CTR:
-            gSubMenuSelection = gSetting_set_ctr;
+            gSubMenuSelection = g->Setting_set_ctr;
             break;
         case MENU_SET_INV:
-            gSubMenuSelection = gSetting_set_inv;
+            gSubMenuSelection = g->Setting_set_inv;
             break;
         case MENU_SET_LCK:
-            gSubMenuSelection = gSetting_set_lck;
+            gSubMenuSelection = g->Setting_set_lck;
             break;
         case MENU_SET_MET:
-            gSubMenuSelection = gSetting_set_met;
+            gSubMenuSelection = g->Setting_set_met;
             break;
         case MENU_SET_GUI:
-            gSubMenuSelection = gSetting_set_gui;
+            gSubMenuSelection = g->Setting_set_gui;
             break;
         case MENU_SET_TMR:
-            gSubMenuSelection = gSetting_set_tmr;
+            gSubMenuSelection = g->Setting_set_tmr;
             break;
         case MENU_TX_LOCK:
             gSubMenuSelection = gTxVfo->TX_LOCK;
diff --git a/driver/backlight.c b/driver/backlight.c
index 17f8799..18f385b 100644
--- a/driver/backlight.c
+++ b/driver/backlight.c
@@ -84,7 +84,7 @@ void BACKLIGHT_TurnOn(void)
 #ifdef ENABLE_FEAT_F4HWN
 #ifdef ENABLE_FEAT_F4HWN_SLEEP
         //RAF: original value was 120 but now 2^7
-        gSleepModeCountdown_500ms = (uint16_t)gSetting_set_off << 7;
+        gSleepModeCountdown_500ms = (uint16_t)g->Setting_set_off << 7;
 #endif
 
         gBacklightBrightnessOld = BACKLIGHT_GetBrightness();
diff --git a/driver/st7565.c b/driver/st7565.c
index fc3723d..6524eeb 100644
--- a/driver/st7565.c
+++ b/driver/st7565.c
@@ -199,10 +199,10 @@ uint8_t cmds[] = {
     {
         switch(i) {
             case 3:
-                ST7565_WriteByte(ST7565_CMD_INVERSE_DISPLAY | gSetting_set_inv);
+                ST7565_WriteByte(ST7565_CMD_INVERSE_DISPLAY | g->Setting_set_inv);
                 break;
             case 7:
-                ST7565_WriteByte(21 + gSetting_set_ctr);
+                ST7565_WriteByte(21 + g->Setting_set_ctr);
                 break;
             default:
                 ST7565_WriteByte(cmds[i]);
diff --git a/main.c b/main.c
index aaebe79..7f5418e 100644
--- a/main.c
+++ b/main.c
@@ -17,6 +17,7 @@
 #include <stdint.h>
 #include <string.h>
 #include <stdio.h>     // NULL
+#include <stdlib.h>
 
 #ifdef ENABLE_AM_FIX
     #include "am_fix.h"
@@ -105,8 +106,9 @@ void Main(void)
     SETTINGS_InitEEPROM();
 
 #ifdef ENABLE_FEAT_F4HWN
+    g = (gSettings *)malloc(sizeof(gSettings));
 #ifdef ENABLE_FEAT_F4HWN_SLEEP
-    gSetting_set_off = 1;
+    g->Setting_set_off = 1;
     gSleepModeCountdown_500ms = 0; //RAF: initialisation in the main? Right!
 #endif
     bitflags = 0; //RAF: not nessarly zero, but it is zero by now.
diff --git a/misc.c b/misc.c
index 3ea8111..0492d2d 100644
--- a/misc.c
+++ b/misc.c
@@ -110,29 +110,18 @@ enum BacklightOnRxTx_t gSetting_backlight_on_tx_rx;
     bool          gSetting_AM_fix = true;
 #endif
 
-#ifdef ENABLE_FEAT_F4HWN_SLEEP 
-    uint8_t       gSetting_set_off;// = 1;
-#endif
-
 #ifdef ENABLE_FEAT_F4HWN
-    uint8_t       gSetting_set_pwr = 1;
-    bool          gSetting_set_ptt = 0;
-    uint8_t       gSetting_set_tot = 0;
-    uint8_t       gSetting_set_ctr = 11;
-    bool          gSetting_set_inv = false;
-    uint8_t       gSetting_set_eot = 0;
-    bool          gSetting_set_lck = false;
-    bool          gSetting_set_met = 0;
-    bool          gSetting_set_gui = 0;
-    bool          gSetting_set_tmr = 0;
-    bool          gSetting_set_ptt_session;
     uint8_t       gDebug;
     uint8_t       gDW = 0;
     uint8_t       gCB = 0;
-    bool          gSaveRxMode = false;
-    uint8_t       crc[15] = { 0 };
     uint8_t       lErrorsDuringAirCopy = 0;
     uint8_t       gAircopyStep = 0;
+    uint8_t       crc[15] = { 0 };
+    gSettings     *g;
+#else
+#ifdef ENABLE_FEAT_F4HWN_SLEEP
+    gSettings     g;
+#endif
 #endif
 
 #ifdef ENABLE_AUDIO_BAR
diff --git a/misc.h b/misc.h
index a9ac2b6..1f4a7bf 100644
--- a/misc.h
+++ b/misc.h
@@ -163,30 +163,53 @@ extern enum BacklightOnRxTx_t gSetting_backlight_on_tx_rx;
     extern bool              gSetting_AM_fix;
 #endif
 
-#ifdef ENABLE_FEAT_F4HWN_SLEEP
-#define F4HWN_SLEEP_VALUE 128
-    extern uint8_t           gSetting_set_off;
-#endif
+/*
+typedef struct __attribute__((__packed__)) {
+    uint8_t          Setting_set_ptt : 1;
+    uint8_t          Setting_set_inv : 1;
+    uint8_t          Setting_set_lck : 1;
+    uint8_t          Setting_set_met : 1;
+    uint8_t          Setting_set_gui : 1;
+    uint8_t          Setting_set_tmr : 1;
+    uint8_t          Setting_set_ptt_session : 1;
+    uint8_t          SaveRxMode : 1;
+} _s_boolsword;
+
+typedef union __attribute__((__aligned__(1))) {
+    _s_boolsword     b;
+    uint8_t          u;
+} boolsword;
+*/
+
+typedef struct __attribute__((__packed__)) {
+    bool          SaveRxMode;// = false;
+    bool          Setting_set_ptt;// = 0;
+    bool          Setting_set_ptt_session;
+    bool          Setting_set_inv;// = false;
+    bool          Setting_set_lck;// = false;
+    bool          Setting_set_met;// = 0;
+    bool          Setting_set_gui;// = 0;
+    bool          Setting_set_tmr;// = 0;
+    uint8_t       Setting_set_pwr;// = 1;
+    uint8_t       Setting_set_tot;// = 0;
+    uint8_t       Setting_set_ctr;// = 11;
+    uint8_t       Setting_set_eot;// = 0;
+    uint8_t       Setting_set_off;// = 1;
+} gSettings;
 
 #ifdef ENABLE_FEAT_F4HWN
-    extern uint8_t            gSetting_set_pwr;
-    extern bool               gSetting_set_ptt;
-    extern uint8_t            gSetting_set_tot;
-    extern uint8_t            gSetting_set_ctr;
-    extern bool               gSetting_set_inv;
-    extern uint8_t            gSetting_set_eot;
-    extern bool               gSetting_set_lck;
-    extern bool               gSetting_set_met;
-    extern bool               gSetting_set_gui;
-    extern bool               gSetting_set_tmr;
-    extern bool               gSetting_set_ptt_session;
     extern uint8_t            gDebug;
     extern uint8_t            gDW;
     extern uint8_t            gCB;
-    extern bool               gSaveRxMode;
     extern uint8_t            crc[15];
     extern uint8_t            lErrorsDuringAirCopy;
     extern uint8_t            gAircopyStep;
+    extern gSettings          *g;
+#endif
+
+#ifdef ENABLE_FEAT_F4HWN_SLEEP
+#define F4HWN_SLEEP_VALUE 128
+    extern uint8_t            gSetting_set_off;
 #endif
 
 #ifdef ENABLE_AUDIO_BAR
diff --git a/radio.c b/radio.c
index 5170545..e6aeca8 100644
--- a/radio.c
+++ b/radio.c
@@ -517,15 +517,15 @@ void RADIO_ConfigureSquelchAndOutputPower(VFO_Info_t *pInfo)
 
     if(currentPower == OUTPUT_POWER_USER)
     {
-        if(gSetting_set_pwr == 5)
+        if(g->Setting_set_pwr == 5)
         {
             Op = 1; // Mid eeprom calibration data
         }
-        else if(gSetting_set_pwr == 6)
+        else if(g->Setting_set_pwr == 6)
         {
             Op = 2; // High eeprom calibration data
         }
-        currentPower = gSetting_set_pwr;
+        currentPower = g->Setting_set_pwr;
     }
     else
     {
diff --git a/settings.c b/settings.c
index 639b7b7..466c90d 100644
--- a/settings.c
+++ b/settings.c
@@ -321,38 +321,38 @@ void SETTINGS_InitEEPROM(void)
     #ifdef ENABLE_FEAT_F4HWN
         // 1FF0..0x1FF7
         EEPROM_ReadBuffer(0x1FF0, Data, 8);
-        gSetting_set_pwr = (((Data[7] & 0xF0) >> 4) < 7) ? ((Data[7] & 0xF0) >> 4) : 0;
-        gSetting_set_ptt = (((Data[7] & 0x0F)) < 2) ? ((Data[7] & 0x0F)) : 0;
+        g->Setting_set_pwr = (((Data[7] & 0xF0) >> 4) < 7) ? ((Data[7] & 0xF0) >> 4) : 0;
+        g->Setting_set_ptt = (((Data[7] & 0x0F)) < 2) ? ((Data[7] & 0x0F)) : 0;
 
-        gSetting_set_tot = (((Data[6] & 0xF0) >> 4) < 4) ? ((Data[6] & 0xF0) >> 4) : 0;
-        gSetting_set_eot = (((Data[6] & 0x0F)) < 4) ? ((Data[6] & 0x0F)) : 0;
+        g->Setting_set_tot = (((Data[6] & 0xF0) >> 4) < 4) ? ((Data[6] & 0xF0) >> 4) : 0;
+        g->Setting_set_eot = (((Data[6] & 0x0F)) < 4) ? ((Data[6] & 0x0F)) : 0;
 
         /*
         int tmp = ((Data[5] & 0xF0) >> 4);
 
-        gSetting_set_inv = (((tmp >> 0) & 0x01) < 2) ? ((tmp >> 0) & 0x01): 0;
-        gSetting_set_lck = (((tmp >> 1) & 0x01) < 2) ? ((tmp >> 1) & 0x01): 0;
-        gSetting_set_met = (((tmp >> 2) & 0x01) < 2) ? ((tmp >> 2) & 0x01): 0;
-        gSetting_set_gui = (((tmp >> 3) & 0x01) < 2) ? ((tmp >> 3) & 0x01): 0;
-        gSetting_set_ctr = (((Data[5] & 0x0F)) > 00 && ((Data[5] & 0x0F)) < 16) ? ((Data[5] & 0x0F)) : 10;
+        g->Setting_set_inv = (((tmp >> 0) & 0x01) < 2) ? ((tmp >> 0) & 0x01): 0;
+        g->Setting_set_lck = (((tmp >> 1) & 0x01) < 2) ? ((tmp >> 1) & 0x01): 0;
+        g->Setting_set_met = (((tmp >> 2) & 0x01) < 2) ? ((tmp >> 2) & 0x01): 0;
+        g->Setting_set_gui = (((tmp >> 3) & 0x01) < 2) ? ((tmp >> 3) & 0x01): 0;
+        g->Setting_set_ctr = (((Data[5] & 0x0F)) > 00 && ((Data[5] & 0x0F)) < 16) ? ((Data[5] & 0x0F)) : 10;
 
-        gSetting_set_tmr = ((Data[4] & 1) < 2) ? (Data[4] & 1): 0;
+        g->Setting_set_tmr = ((Data[4] & 1) < 2) ? (Data[4] & 1): 0;
         */
 
         int tmp = (Data[5] & 0xF0) >> 4;
 
-        gSetting_set_inv = (tmp >> 0) & 0x01;
-        gSetting_set_lck = (tmp >> 1) & 0x01;
-        gSetting_set_met = (tmp >> 2) & 0x01;
-        gSetting_set_gui = (tmp >> 3) & 0x01;
+        g->Setting_set_inv = (tmp >> 0) & 0x01;
+        g->Setting_set_lck = (tmp >> 1) & 0x01;
+        g->Setting_set_met = (tmp >> 2) & 0x01;
+        g->Setting_set_gui = (tmp >> 3) & 0x01;
 
         int ctr_value = Data[5] & 0x0F;
-        gSetting_set_ctr = (ctr_value > 0 && ctr_value < 16) ? ctr_value : 10;
+        g->Setting_set_ctr = (ctr_value > 0 && ctr_value < 16) ? ctr_value : 10;
 
-        gSetting_set_tmr = Data[4] & 0x01;
+        g->Setting_set_tmr = Data[4] & 0x01;
 #ifdef ENABLE_FEAT_F4HWN_SLEEP
         //RAF: original values were 120:1000, now 2^3 F4HWN_SLEEP_VALUE 2^-1
-        gSetting_set_off = (Data[4] >> 7) ? F4HWN_SLEEP_VALUE >> 1 : Data[4];
+        g->Setting_set_off = (Data[4] >> 7) ? F4HWN_SLEEP_VALUE >> 1 : Data[4];
 #endif
 
         // Warning
@@ -360,8 +360,8 @@ void SETTINGS_InitEEPROM(void)
         // Warning
 
         // And set special session settings for actions
-        gSetting_set_ptt_session = gSetting_set_ptt;
-        gEeprom.KEY_LOCK_PTT = gSetting_set_lck;
+        g->Setting_set_ptt_session = g->Setting_set_ptt;
+        gEeprom.KEY_LOCK_PTT = g->Setting_set_lck;
     #endif
 }
 
@@ -593,7 +593,7 @@ void SETTINGS_SaveSettings(void)
     State[4] = gEeprom.DUAL_WATCH;
 
     #ifdef ENABLE_FEAT_F4HWN
-        if(!gSaveRxMode)
+        if(!g->SaveRxMode)
         {
             State[2] = gCB;
             State[4] = gDW;
@@ -735,39 +735,39 @@ void SETTINGS_SaveSettings(void)
     /*
     tmp = 0;
 
-    if(gSetting_set_tmr == 1)
+    if(g->Setting_set_tmr == 1)
         tmp = tmp | (1 << 0);
 
     State[4] = tmp;
 
     tmp = 0;
 
-    if(gSetting_set_inv == 1)
+    if(g->Setting_set_inv == 1)
         tmp = tmp | (1 << 0);
-    if (gSetting_set_lck == 1)
+    if (g->Setting_set_lck == 1)
         tmp = tmp | (1 << 1);
-    if (gSetting_set_met == 1)
+    if (g->Setting_set_met == 1)
         tmp = tmp | (1 << 2);
-    if (gSetting_set_gui == 1)
+    if (g->Setting_set_gui == 1)
         tmp = tmp | (1 << 3);
     */
 
 #ifdef ENABLE_FEAT_F4HWN_SLEEP 
-    State[4] = (gSetting_set_off << 1) | (gSetting_set_tmr & 0x01);
+    State[4] = (g->Setting_set_off << 1) | (g->Setting_set_tmr & 0x01);
 #else
-    State[4] = gSetting_set_tmr ? (1 << 0) : 0;
+    State[4] = g->Setting_set_tmr ? (1 << 0) : 0;
 #endif
 
-    tmp =   (gSetting_set_inv << 0) |
-            (gSetting_set_lck << 1) |
-            (gSetting_set_met << 2) |
-            (gSetting_set_gui << 3);
+    tmp =   (g->Setting_set_inv << 0) |
+            (g->Setting_set_lck << 1) |
+            (g->Setting_set_met << 2) |
+            (g->Setting_set_gui << 3);
 
-    State[5] = ((tmp << 4) | (gSetting_set_ctr & 0x0F));
-    State[6] = ((gSetting_set_tot << 4) | (gSetting_set_eot & 0x0F));
-    State[7] = ((gSetting_set_pwr << 4) | (gSetting_set_ptt & 0x0F));
+    State[5] = ((tmp << 4) | (g->Setting_set_ctr & 0x0F));
+    State[6] = ((g->Setting_set_tot << 4) | (g->Setting_set_eot & 0x0F));
+    State[7] = ((g->Setting_set_pwr << 4) | (g->Setting_set_ptt & 0x0F));
 
-    gEeprom.KEY_LOCK_PTT = gSetting_set_lck;
+    gEeprom.KEY_LOCK_PTT = g->Setting_set_lck;
 
     EEPROM_WriteBuffer(0x1FF0, State);
 #endif
diff --git a/ui/main.c b/ui/main.c
index 321f54a..d415b3f 100644
--- a/ui/main.c
+++ b/ui/main.c
@@ -61,7 +61,7 @@ center_line_t center_line = CENTER_LINE_NONE;
     {
         if(checkGui)
         {
-            if(((gEeprom.DUAL_WATCH != DUAL_WATCH_OFF) + (gEeprom.CROSS_BAND_RX_TX != CROSS_BAND_OFF) * 2 == 0) || gSetting_set_gui)
+            if(((gEeprom.DUAL_WATCH != DUAL_WATCH_OFF) + (gEeprom.CROSS_BAND_RX_TX != CROSS_BAND_OFF) * 2 == 0) || g->Setting_set_gui)
                 return true;
             else
                 return false;
@@ -128,7 +128,7 @@ static void DrawLevelBar(uint8_t xpos, uint8_t line, uint8_t level, uint8_t bars
 
     for(uint8_t i = 0; i < level; i++) {
 #ifdef ENABLE_FEAT_F4HWN
-        if(gSetting_set_met)
+        if(g->Setting_set_met)
         {
             const char hollowBar[] = {
                 0b01111111,
@@ -493,25 +493,25 @@ void UI_MAIN_TimeSlice500ms(void)
             DisplayRSSIBar(true);
         }
 #ifdef ENABLE_FEAT_F4HWN // Blink Green Led for white...
-        else if(gSetting_set_eot > 0 && RxBlinkLed == 2)
+        else if(g->Setting_set_eot > 0 && RxBlinkLed == 2)
         {
             if(RxBlinkLedCounter <= 8)
             {
                 if(RxBlinkLedCounter % 2 == 0)
                 {
-                    if(gSetting_set_eot > 1 )
+                    if(g->Setting_set_eot > 1 )
                     {
                         BK4819_ToggleGpioOut(BK4819_GPIO6_PIN2_GREEN, false);
                     }
                 }
                 else
                 {
-                    if(gSetting_set_eot > 1 )
+                    if(g->Setting_set_eot > 1 )
                     {
                         BK4819_ToggleGpioOut(BK4819_GPIO6_PIN2_GREEN, true);
                     }
 
-                    if(gSetting_set_eot == 1 || gSetting_set_eot == 3)
+                    if(g->Setting_set_eot == 1 || g->Setting_set_eot == 3)
                     {
                         switch(RxBlinkLedCounter)
                         {
@@ -1211,7 +1211,7 @@ void UI_DisplayMain(void)
 
             if(currentPower == OUTPUT_POWER_USER)
             {
-                currentPower = gSetting_set_pwr;
+                currentPower = g->Setting_set_pwr;
                 userPower = true;
             }
             else
diff --git a/ui/menu.c b/ui/menu.c
index 633f20b..dec661b 100644
--- a/ui/menu.c
+++ b/ui/menu.c
@@ -1016,7 +1016,7 @@ void UI_DisplayMenu(void)
 
         case MENU_SET_CTR:
             sprintf(String, "%d", gSubMenuSelection);
-            gSetting_set_ctr = gSubMenuSelection;
+            g->Setting_set_ctr = gSubMenuSelection;
             ST7565_ContrastAndInv();
             break;
 
diff --git a/ui/status.c b/ui/status.c
index 707c4d8..e3f0609 100644
--- a/ui/status.c
+++ b/ui/status.c
@@ -147,7 +147,7 @@ void UI_DisplayStatus()
         if(!SCANNER_IsScanning()) {
         #ifdef ENABLE_FEAT_F4HWN_RX_TX_TIMER
             //RAF: reworked on 22.10.2024 by github/robang74
-            if(gSetting_set_tmr == true) {
+            if(g->Setting_set_tmr == true) {
                 convertTime(line, FUNCTION_IsRx());
             }
             else
@@ -183,7 +183,7 @@ void UI_DisplayStatus()
 
 #ifdef ENABLE_FEAT_F4HWN
     // PTT indicator
-    if (gSetting_set_ptt_session) {
+    if (g->Setting_set_ptt_session) {
         memcpy(line + x, gFontPttOnePush, sizeof(gFontPttOnePush));
         x1 = x + sizeof(gFontPttOnePush) + 1;
     }
-- 
2.34.1

